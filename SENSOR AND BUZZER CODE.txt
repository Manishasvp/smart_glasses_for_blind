#include <NewPing.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

// Define pins for each sensor
#define TRIG_PIN_1 2
#define ECHO_PIN_1 3
#define TRIG_PIN_2 4
#define ECHO_PIN_2 5
#define TRIG_PIN_3 6
#define ECHO_PIN_3 7

// Define pins for buzzers
#define BUZZER_PIN_1 8
#define BUZZER_PIN_2 9
#define BUZZER_PIN_3 10

// Define distance threshold
#define MAX_DISTANCE 200
#define THRESHOLD_DISTANCE 5  // Set threshold distance to 50 cm

// Define pins for GPS module
#define GPS_TX 12
#define GPS_RX 11

// Create NewPing objects for each sensor
NewPing sonar1(TRIG_PIN_1, ECHO_PIN_1, MAX_DISTANCE);
NewPing sonar2(TRIG_PIN_2, ECHO_PIN_2, MAX_DISTANCE);
NewPing sonar3(TRIG_PIN_3, ECHO_PIN_3, MAX_DISTANCE);

// Create GPS object
TinyGPSPlus gps;
SoftwareSerial ss(GPS_RX, GPS_TX);

void setup() {
  Serial.begin(9600);  // Initialize serial communication for debugging
  ss.begin(9600);  // Initialize software serial for GPS

  pinMode(BUZZER_PIN_1, OUTPUT);
  pinMode(BUZZER_PIN_2, OUTPUT);
  pinMode(BUZZER_PIN_3, OUTPUT);
}

void loop() {
  // Read distances from ultrasonic sensors
  int distance1 = sonar1.ping_cm();
  int distance2 = sonar2.ping_cm();
  int distance3 = sonar3.ping_cm();

  // Control buzzers based on distance
  if (distance1 > 0 && distance1 <= THRESHOLD_DISTANCE) {
    digitalWrite(BUZZER_PIN_1, HIGH);
  } else {
    digitalWrite(BUZZER_PIN_1, LOW);
  }

  if (distance2 > 0 && distance2 <= THRESHOLD_DISTANCE) {
    digitalWrite(BUZZER_PIN_2, HIGH);
  } else {
    digitalWrite(BUZZER_PIN_2, LOW);
  }

  if (distance3 > 0 && distance3 <= THRESHOLD_DISTANCE) {
    digitalWrite(BUZZER_PIN_3, HIGH);
  } else {
    digitalWrite(BUZZER_PIN_3, LOW);
  }

  // Read data from the GPS module
  while (ss.available() > 0) {
    gps.encode(ss.read());
  }

  // If GPS data is updated, print it to the serial monitor
  if (gps.location.isUpdated()) {
    Serial.print("Latitude: ");
    Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: ");
    Serial.println(gps.location.lng(), 6);
  }

  delay(100);  // Wait before the next loop
}